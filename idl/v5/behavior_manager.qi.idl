package unknown
interface ALBehaviorManager
	fn registerEvent(P0: uint32, P1: uint32, P2: uint64) -> uint64 //uid:0
	fn unregisterEvent(P0: uint32, P1: uint32, P2: uint64) //uid:1
	fn metaObject(P0: uint32) -> MetaObject //uid:2
	fn terminate(P0: uint32) //uid:3
	fn property(P0: any) -> any //uid:5
	fn setProperty(P0: any, P1: any) //uid:6
	fn properties() -> Vec<str> //uid:7
	fn registerEventWithSignature(P0: uint32, P1: uint32, P2: uint64, P3: str) -> uint64 //uid:8
	fn isStatsEnabled() -> bool //uid:80
	fn enableStats(P0: bool) //uid:81
	fn stats() -> Map<uint32,MethodStatistics> //uid:82
	fn clearStats() //uid:83
	fn isTraceEnabled() -> bool //uid:84
	fn enableTrace(P0: bool) //uid:85
	fn exit() //uid:100
	fn __pCall(P0: uint32, P1: Vec<any>) -> int32 //uid:101
	fn pCall(P0: any) -> any //uid:102
	fn version() -> str //uid:103
	fn ping() -> bool //uid:104
	fn getMethodList() -> Vec<str> //uid:105
	fn getMethodHelp(methodName: str) -> any //uid:106
	fn getModuleHelp() -> any //uid:107
	fn wait(id: int32,timeoutPeriod: int32) -> bool //uid:108
	fn isRunning(id: int32) -> bool //uid:109
	fn stop(id: int32) //uid:110
	fn getBrokerName() -> str //uid:111
	fn getUsage(name: str) -> str //uid:112
	fn installBehavior(localPath: str) -> bool //uid:113
	fn installBehavior(absolutePath: str,localPath: str,overwrite: bool) -> bool //uid:114
	fn preloadBehavior(behavior: str) -> bool //uid:115
	fn startBehavior(behavior: str) //uid:116
	fn runBehavior(behavior: str) //uid:117
	fn stopBehavior(behavior: str) //uid:118
	fn stopAllBehaviors() //uid:119
	fn removeBehavior(behavior: str) -> bool //uid:120
	fn isBehaviorInstalled(name: str) -> bool //uid:121
	fn isBehaviorPresent(prefixedBehavior: str) -> bool //uid:122
	fn getBehaviorNames() -> Vec<str> //uid:123
	fn getUserBehaviorNames() -> Vec<str> //uid:124
	fn getSystemBehaviorNames() -> Vec<str> //uid:125
	fn getInstalledBehaviors() -> Vec<str> //uid:126
	fn getBehaviorsByTag(tag: str) -> Vec<str> //uid:127
	fn isBehaviorRunning(behavior: str) -> bool //uid:128
	fn isBehaviorLoaded(behavior: str) -> bool //uid:129
	fn getRunningBehaviors() -> Vec<str> //uid:130
	fn getLoadedBehaviors() -> Vec<str> //uid:131
	fn getTagList() -> Vec<str> //uid:132
	fn getBehaviorTags(behavior: str) -> Vec<str> //uid:133
	fn getBehaviorNature(behavior: str) -> str //uid:134
	fn _getBehaviorRelativePath(behaviorId: str) -> str //uid:135
	fn _getPackageUid(behaviorId: str) -> str //uid:136
	fn addDefaultBehavior(behavior: str) //uid:137
	fn removeDefaultBehavior(behavior: str) //uid:138
	fn getDefaultBehaviors() -> Vec<str> //uid:139
	fn playDefaultProject() //uid:140
	fn _onDataChanged(dataName: str,dataValue: any,message: str) //uid:141
	fn _getBehaviorFrameManagerId(name: str) -> str //uid:142
	fn resolveBehaviorName(name: str) -> str //uid:143
	sig traceObject(P0: EventTrace) //uid:86
	sig behaviorsAdded(P0: Vec<str>) //uid:144
	sig behaviorsRemoved(P0: Vec<str>) //uid:145
	sig behaviorLoaded(P0: str) //uid:146
	sig behaviorStarted(P0: str) //uid:147
	sig behaviorStopped(P0: str) //uid:148
	sig behaviorFailed(P0: str, P1: str, P2: str) //uid:149
end
struct MetaMethodParameter
	name: str
	description: str
end
struct MetaMethod
	uid: uint32
	returnSignature: str
	name: str
	parametersSignature: str
	description: str
	parameters: Vec<MetaMethodParameter>
	returnDescription: str
end
struct MetaSignal
	uid: uint32
	name: str
	signature: str
end
struct MetaProperty
	uid: uint32
	name: str
	signature: str
end
struct MetaObject
	methods: Map<uint32,MetaMethod>
	signals: Map<uint32,MetaSignal>
	properties: Map<uint32,MetaProperty>
	description: str
end
struct MinMaxSum
	minValue: float32
	maxValue: float32
	cumulatedValue: float32
end
struct MethodStatistics
	count: uint32
	wall: MinMaxSum
	user: MinMaxSum
	system: MinMaxSum
end
struct timeval
	tv_sec: int64
	tv_usec: int64
end
struct EventTrace
	id: uint32
	kind: int32
	slotId: uint32
	arguments: any
	timestamp: timeval
	userUsTime: int64
	systemUsTime: int64
	callerContext: uint32
	calleeContext: uint32
end
